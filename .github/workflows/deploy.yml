name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Load SSH key into ssh-agent
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 3. Log in to Docker Hub
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" \
            | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # 4. Build and push Docker image
      - name: Build and push Docker image
        working-directory: backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth-service:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/auth-service:${{ github.sha }}

      # 5-1. 서버에 .env.development 파일 생성
      - name: Create .env.development on server
        run: |
          ssh -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          mkdir -p ~/auth-service/backend
          cat > ~/auth-service/backend/.env.development << 'EOL'
          NODE_ENV=${{ secrets.NODE_ENV }}
          PORT=${{ secrets.PORT }}
          MONGODB_URI=${{ secrets.MONGODB_URI }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}
          JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}
          JWT_REFRESH_EXPIRES_IN=${{ secrets.JWT_REFRESH_EXPIRES_IN }}
          REDIS_URL=${{ secrets.REDIS_URL }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}
          FRONTEND_URL=${{ secrets.FRONTEND_URL }}
          GMAIL_CLIENT_ID=${{ secrets.GMAIL_CLIENT_ID }}
          GMAIL_CLIENT_SECRET=${{ secrets.GMAIL_CLIENT_SECRET }}
          GMAIL_REFRESH_TOKEN=${{ secrets.GMAIL_REFRESH_TOKEN }}
          GMAIL_USER=${{ secrets.GMAIL_USER }}
          RESET_PASSWORD_URL=${{ secrets.RESET_PASSWORD_URL }}
          EOL
          EOF

      # 5-2. Deploy to EC2 via deploy.sh
      - name: Deploy to EC2 instance via SSH
        run: |
          ssh -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -s' \
            < ./deploy.sh
